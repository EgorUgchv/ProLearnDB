// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProLearnDB.Data;

#nullable disable

namespace ProLearnDB.Migrations
{
    [DbContext(typeof(ProLearnDbContext))]
    partial class ProLearnDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProLearnDB.Models.CorrectAnswer", b =>
                {
                    b.Property<int>("CorrectAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CorrectAnswerId"));

                    b.Property<string>("Answer")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("CorrectAnswerId");

                    b.ToTable("CorrectAnswers");
                });

            modelBuilder.Entity("ProLearnDB.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("CorrectAnswerId")
                        .HasColumnType("integer");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("IssueChoice1")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("IssueChoice2")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("IssueChoice3")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("IssueChoice4")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("TestTitleId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId");

                    b.HasIndex("CorrectAnswerId");

                    b.HasIndex("TestTitleId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ProLearnDB.Models.TestTitle", b =>
                {
                    b.Property<int>("TestTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestTitleId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("TestTitleId");

                    b.ToTable("TestTitles");
                });

            modelBuilder.Entity("ProLearnDB.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProLearnDB.Models.UserProgress", b =>
                {
                    b.Property<int>("UserProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserProgressId"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<int>("TestTitleId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UserProgressId");

                    b.HasIndex("TestTitleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProgresses");
                });

            modelBuilder.Entity("ProLearnDB.Models.Question", b =>
                {
                    b.HasOne("ProLearnDB.Models.CorrectAnswer", "CorrectAnswer")
                        .WithMany("Questions")
                        .HasForeignKey("CorrectAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProLearnDB.Models.TestTitle", "TestTitle")
                        .WithMany("Questions")
                        .HasForeignKey("TestTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorrectAnswer");

                    b.Navigation("TestTitle");
                });

            modelBuilder.Entity("ProLearnDB.Models.UserProgress", b =>
                {
                    b.HasOne("ProLearnDB.Models.TestTitle", "TestTitle")
                        .WithMany("UserProgresses")
                        .HasForeignKey("TestTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProLearnDB.Models.User", "User")
                        .WithMany("UserProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestTitle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProLearnDB.Models.CorrectAnswer", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ProLearnDB.Models.TestTitle", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("ProLearnDB.Models.User", b =>
                {
                    b.Navigation("UserProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
